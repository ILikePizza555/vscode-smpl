{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SmPL",
	"patterns": [
		{"include": "#keywords"},
		{"include": "#rulename_expression"},
		{"include": "#metadecl_expression"},
		{"include": "#transformation_expression"}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.other.metavariable.delcaration",
					"match": "(metavariable)|(fresh)|(identifier)|(parameter)|(list)|(type)|(statement)|(declaration)|(field)|(typedef)|(attribute)|(declarer)|(name)|(iterator)|(local)|(global)|(expression)|(enum)|(struct)|(union)|(constant)|(position)|(symbol)|(format)|(assignment)|(binary)|(operator)"
				},
				{
					"name": "keyword.other.depends",
					"match": "(ever)|(never)|(file in)"
				}
			]
		},
		"rulename_expression": {
			"name": "entity.rule",
			"begin": "@(\\S*)?((extends) (\\S*))?((depends on) (.+))?((using) (.+))?((disable) ([\\S,]+))?(exists|forall)?(.)*@",
			"end": "@@",
			"beginCaptures": {
				"0": {"name": "entity.other.rule.begin"},
				"1": {"name": "entity.other.rule.name"},
				"2": {"name": "entity.other.rule.decl.extends"},
				"3": {"name": "keyword.other.rulename.extends"},
				"4": {"name": "entity.other.rule.extends"},
				"5": {"name": "entity.other.rulename.decl.depends"},
				"6": {"name": "keyword.other.rulename.extends"},
				"7": {"name": "entity.other.rule.extends"},
				"8": {"name": "entity.other.rule.decl.using"},
				"9": {"name": "keyword.other.rulename.using"},
				"10": {"name": "entity.other.rule.exists"},
				"11": {"name": "entity.other.rule.decl.disable"},
				"12": {"name": "keyword.other.rulename.disable"},
				"13": {"name": "entity.other.rule.disable"},
				"14": {"name": "keyword.other.exists"}
			},
			"endCaptures": {
				"0": {"name": "entity.other.endrule"}
			},
			"patterns": [
				{"include": "#metavar_declaration"}
			]
		},
		"transformation_expression": {
			"patterns": [
				{
					"name": "markup.deleted",
					"match": "^- (.*)"
				},
				{
					"name": "markup.inserted",
					"match": "^\\+ (.*)"
				},
				{
					"name": "markup.interested",
					"match": "^\\* (.*)"
				}
			]
		}
	},
	"scopeName": "source.smpl"
}